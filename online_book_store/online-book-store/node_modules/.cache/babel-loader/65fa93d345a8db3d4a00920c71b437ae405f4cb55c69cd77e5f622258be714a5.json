{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\sudha\\\\Documents\\\\Learnings\\\\React\\\\React_Learnings\\\\online_book_store\\\\online-book-store\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useState, useEffect } from 'react';\nimport { loginUser, registerUser, logoutUser, getCurrentUser } from '../api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [token, setToken] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [authLoading, setAuthLoading] = useState(false);\n  const [authError, setAuthError] = useState(null);\n  useEffect(() => {\n    // Check for existing session on app load\n    checkExistingSession();\n  }, []);\n  const checkExistingSession = async () => {\n    try {\n      setLoading(true);\n      const {\n        user: existingUser,\n        token: existingToken\n      } = await getCurrentUser();\n      setUser(existingUser);\n      setToken(existingToken);\n      setAuthError(null);\n    } catch (error) {\n      // No existing session or invalid session\n      setUser(null);\n      setToken(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n  const login = async credentials => {\n    try {\n      setAuthLoading(true);\n      setAuthError(null);\n      const {\n        user: loggedInUser,\n        token: userToken\n      } = await loginUser(credentials);\n      setUser(loggedInUser);\n      setToken(userToken);\n      return {\n        success: true\n      };\n    } catch (error) {\n      const errorMessage = error.message || 'Login failed. Please try again.';\n      setAuthError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setAuthLoading(false);\n    }\n  };\n  const register = async userData => {\n    try {\n      setAuthLoading(true);\n      setAuthError(null);\n      await registerUser(userData);\n      return {\n        success: true\n      };\n    } catch (error) {\n      const errorMessage = error.message || 'Registration failed. Please try again.';\n      setAuthError(errorMessage);\n      return {\n        success: false,\n        error: errorMessage\n      };\n    } finally {\n      setAuthLoading(false);\n    }\n  };\n  const logout = async () => {\n    try {\n      setAuthLoading(true);\n      await logoutUser();\n      setUser(null);\n      setToken(null);\n      setAuthError(null);\n    } catch (error) {\n      console.error('Logout error:', error);\n      // Force logout even if API call fails\n      setUser(null);\n      setToken(null);\n      setAuthError(null);\n    } finally {\n      setAuthLoading(false);\n    }\n  };\n  const clearAuthError = () => {\n    setAuthError(null);\n  };\n  const value = {\n    user,\n    token,\n    isAuthenticated: !!user,\n    loading,\n    authLoading,\n    authError,\n    login,\n    register,\n    logout,\n    clearAuthError,\n    refreshUser: checkExistingSession\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"uR7ikfAcxlyetlxD+1b17JhoMC8=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useState","useEffect","loginUser","registerUser","logoutUser","getCurrentUser","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","context","Error","AuthProvider","children","_s2","user","setUser","token","setToken","loading","setLoading","authLoading","setAuthLoading","authError","setAuthError","checkExistingSession","existingUser","existingToken","error","login","credentials","loggedInUser","userToken","success","errorMessage","message","register","userData","logout","console","clearAuthError","value","isAuthenticated","refreshUser","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/sudha/Documents/Learnings/React/React_Learnings/online_book_store/online-book-store/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useState, useEffect } from 'react';\r\nimport { loginUser, registerUser, logoutUser, getCurrentUser } from '../api';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const useAuth = () => {\r\n  const context = useContext(AuthContext);\r\n  if (!context) {\r\n    throw new Error('useAuth must be used within an AuthProvider');\r\n  }\r\n  return context;\r\n};\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const [token, setToken] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [authLoading, setAuthLoading] = useState(false);\r\n  const [authError, setAuthError] = useState(null);\r\n\r\n  useEffect(() => {\r\n    // Check for existing session on app load\r\n    checkExistingSession();\r\n  }, []);\r\n\r\n  const checkExistingSession = async () => {\r\n    try {\r\n      setLoading(true);\r\n      const { user: existingUser, token: existingToken } = await getCurrentUser();\r\n      setUser(existingUser);\r\n      setToken(existingToken);\r\n      setAuthError(null);\r\n    } catch (error) {\r\n      // No existing session or invalid session\r\n      setUser(null);\r\n      setToken(null);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const login = async (credentials) => {\r\n    try {\r\n      setAuthLoading(true);\r\n      setAuthError(null);\r\n\r\n      const { user: loggedInUser, token: userToken } = await loginUser(credentials);\r\n\r\n      setUser(loggedInUser);\r\n      setToken(userToken);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.message || 'Login failed. Please try again.';\r\n      setAuthError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  const register = async (userData) => {\r\n    try {\r\n      setAuthLoading(true);\r\n      setAuthError(null);\r\n\r\n      await registerUser(userData);\r\n\r\n      return { success: true };\r\n    } catch (error) {\r\n      const errorMessage = error.message || 'Registration failed. Please try again.';\r\n      setAuthError(errorMessage);\r\n      return { success: false, error: errorMessage };\r\n    } finally {\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  const logout = async () => {\r\n    try {\r\n      setAuthLoading(true);\r\n      await logoutUser();\r\n      setUser(null);\r\n      setToken(null);\r\n      setAuthError(null);\r\n    } catch (error) {\r\n      console.error('Logout error:', error);\r\n      // Force logout even if API call fails\r\n      setUser(null);\r\n      setToken(null);\r\n      setAuthError(null);\r\n    } finally {\r\n      setAuthLoading(false);\r\n    }\r\n  };\r\n\r\n  const clearAuthError = () => {\r\n    setAuthError(null);\r\n  };\r\n\r\n  const value = {\r\n    user,\r\n    token,\r\n    isAuthenticated: !!user,\r\n    loading,\r\n    authLoading,\r\n    authError,\r\n    login,\r\n    register,\r\n    logout,\r\n    clearAuthError,\r\n    refreshUser: checkExistingSession\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC7E,SAASC,SAAS,EAAEC,YAAY,EAAEC,UAAU,EAAEC,cAAc,QAAQ,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7E,MAAMC,WAAW,gBAAGV,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMW,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAMC,OAAO,GAAGZ,UAAU,CAACS,WAAW,CAAC;EACvC,IAAI,CAACG,OAAO,EAAE;IACZ,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAChE;EACA,OAAOD,OAAO;AAChB,CAAC;AAACD,EAAA,CANWD,OAAO;AAQpB,OAAO,MAAMI,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,OAAO,EAAEC,UAAU,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACsB,WAAW,EAAEC,cAAc,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwB,SAAS,EAAEC,YAAY,CAAC,GAAGzB,QAAQ,CAAC,IAAI,CAAC;EAEhDC,SAAS,CAAC,MAAM;IACd;IACAyB,oBAAoB,CAAC,CAAC;EACxB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvC,IAAI;MACFL,UAAU,CAAC,IAAI,CAAC;MAChB,MAAM;QAAEL,IAAI,EAAEW,YAAY;QAAET,KAAK,EAAEU;MAAc,CAAC,GAAG,MAAMvB,cAAc,CAAC,CAAC;MAC3EY,OAAO,CAACU,YAAY,CAAC;MACrBR,QAAQ,CAACS,aAAa,CAAC;MACvBH,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACd;MACAZ,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,SAAS;MACRE,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAMS,KAAK,GAAG,MAAOC,WAAW,IAAK;IACnC,IAAI;MACFR,cAAc,CAAC,IAAI,CAAC;MACpBE,YAAY,CAAC,IAAI,CAAC;MAElB,MAAM;QAAET,IAAI,EAAEgB,YAAY;QAAEd,KAAK,EAAEe;MAAU,CAAC,GAAG,MAAM/B,SAAS,CAAC6B,WAAW,CAAC;MAE7Ed,OAAO,CAACe,YAAY,CAAC;MACrBb,QAAQ,CAACc,SAAS,CAAC;MAEnB,OAAO;QAAEC,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAMM,YAAY,GAAGN,KAAK,CAACO,OAAO,IAAI,iCAAiC;MACvEX,YAAY,CAACU,YAAY,CAAC;MAC1B,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEL,KAAK,EAAEM;MAAa,CAAC;IAChD,CAAC,SAAS;MACRZ,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMc,QAAQ,GAAG,MAAOC,QAAQ,IAAK;IACnC,IAAI;MACFf,cAAc,CAAC,IAAI,CAAC;MACpBE,YAAY,CAAC,IAAI,CAAC;MAElB,MAAMtB,YAAY,CAACmC,QAAQ,CAAC;MAE5B,OAAO;QAAEJ,OAAO,EAAE;MAAK,CAAC;IAC1B,CAAC,CAAC,OAAOL,KAAK,EAAE;MACd,MAAMM,YAAY,GAAGN,KAAK,CAACO,OAAO,IAAI,wCAAwC;MAC9EX,YAAY,CAACU,YAAY,CAAC;MAC1B,OAAO;QAAED,OAAO,EAAE,KAAK;QAAEL,KAAK,EAAEM;MAAa,CAAC;IAChD,CAAC,SAAS;MACRZ,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMgB,MAAM,GAAG,MAAAA,CAAA,KAAY;IACzB,IAAI;MACFhB,cAAc,CAAC,IAAI,CAAC;MACpB,MAAMnB,UAAU,CAAC,CAAC;MAClBa,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,IAAI,CAAC;MACdM,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdW,OAAO,CAACX,KAAK,CAAC,eAAe,EAAEA,KAAK,CAAC;MACrC;MACAZ,OAAO,CAAC,IAAI,CAAC;MACbE,QAAQ,CAAC,IAAI,CAAC;MACdM,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,SAAS;MACRF,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMkB,cAAc,GAAGA,CAAA,KAAM;IAC3BhB,YAAY,CAAC,IAAI,CAAC;EACpB,CAAC;EAED,MAAMiB,KAAK,GAAG;IACZ1B,IAAI;IACJE,KAAK;IACLyB,eAAe,EAAE,CAAC,CAAC3B,IAAI;IACvBI,OAAO;IACPE,WAAW;IACXE,SAAS;IACTM,KAAK;IACLO,QAAQ;IACRE,MAAM;IACNE,cAAc;IACdG,WAAW,EAAElB;EACf,CAAC;EAED,oBACEnB,OAAA,CAACC,WAAW,CAACqC,QAAQ;IAACH,KAAK,EAAEA,KAAM;IAAA5B,QAAA,EAChCA;EAAQ;IAAAgC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACW,CAAC;AAE3B,CAAC;AAAClC,GAAA,CA1GWF,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AAAA,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}